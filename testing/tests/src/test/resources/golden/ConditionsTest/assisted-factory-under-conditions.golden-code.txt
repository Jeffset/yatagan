~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Name: test/Yatagan$MyComponent.java
package test;

import com.yandex.yatagan.AutoBuilder;
import com.yandex.yatagan.Optional;
import com.yandex.yatagan.internal.Checks;
import com.yandex.yatagan.internal.YataganGenerated;
import java.lang.Class;
import java.lang.Override;
import java.lang.SuppressWarnings;
import java.util.Collections;
import javax.annotation.processing.Generated;

@SuppressWarnings({"unchecked", "rawtypes", "NullableProblems"})
@YataganGenerated
@Generated("com.yandex.yatagan.codegen.impl.ComponentGenerator")
public final class Yatagan$MyComponent implements MyComponent {
  final boolean mFeaturesFooBar = Features.fooBar();

  private Yatagan$MyComponent() {
  }

  @Override
  public Optional<MyClassBFactory> getF() {
    return this.optOfMyClassBFactory();
  }

  Optional optOfMyClassBFactory() {
    return this.mFeaturesFooBar ? Optional.of(this.new MyClassBFactoryImpl()) : Optional.empty();
  }

  public static AutoBuilder<Yatagan$MyComponent> autoBuilder() {
    return new AutoBuilderImpl();
  }

  private final class MyClassBFactoryImpl implements MyClassBFactory {
    @Override
    public MyClassB create(int i) {
      return new MyClassB(i, new MyClassA());
    }
  }

  private static final class AutoBuilderImpl implements AutoBuilder<Yatagan$MyComponent> {
    @Override
    public final <I> AutoBuilder<Yatagan$MyComponent> provideInput(I input, Class<I> inputClass) {
      Checks.reportUnexpectedAutoBuilderInput(input.getClass(), Collections.emptyList());
      return this;
    }

    @Override
    public final Yatagan$MyComponent create() {
      return new Yatagan$MyComponent();
    }
  }
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
