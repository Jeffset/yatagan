~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Name: test/YataganMyProductComponent.java
package test;

import com.yandex.yatagan.AutoBuilder;
import com.yandex.yatagan.Optional;
import com.yandex.yatagan.internal.Checks;
import com.yandex.yatagan.internal.YataganGenerated;
import java.lang.Class;
import java.lang.Override;
import java.lang.SuppressWarnings;
import java.util.Collections;
import javax.annotation.processing.Generated;
import javax.inject.Provider;

@SuppressWarnings({"unchecked", "rawtypes", "NullableProblems"})
@YataganGenerated
@Generated("com.yandex.yatagan.codegen.impl.ComponentGenerator")
public final class YataganMyProductComponent implements MyProductComponent {
  private YataganMyProductComponent() {
  }

  @Override
  public MyApiComponent.Factory getApiC() {
    return new MyApiComponentImpl.ComponentFactoryImpl(this);
  }

  public static AutoBuilder<YataganMyProductComponent> autoBuilder() {
    return new AutoBuilderImpl();
  }

  static final class MyApiComponentImpl implements MyApiComponent {
    final YataganMyProductComponent mMyProductComponent;

    MyApiComponentImpl(YataganMyProductComponent pMyProductComponent) {
      this.mMyProductComponent = pMyProductComponent;
    }

    @Override
    public Optional<Api> getApi() {
      return Optional.empty();
    }

    @Override
    public Optional<Provider<Api>> getApiProvider() {
      return Optional.empty();
    }

    private static final class ComponentFactoryImpl implements MyApiComponent.Factory {
      YataganMyProductComponent fMyProductComponent;

      ComponentFactoryImpl(YataganMyProductComponent fMyProductComponent) {
        this.fMyProductComponent = fMyProductComponent;
      }

      @Override
      public MyApiComponent create() {
        return new MyApiComponentImpl(this.fMyProductComponent);
      }
    }
  }

  private static final class AutoBuilderImpl implements AutoBuilder<YataganMyProductComponent> {
    @Override
    public final <I> AutoBuilder<YataganMyProductComponent> provideInput(I input,
        Class<I> inputClass) {
      Checks.reportUnexpectedAutoBuilderInput(input.getClass(), Collections.emptyList());
      return this;
    }

    @Override
    public final YataganMyProductComponent create() {
      return new YataganMyProductComponent();
    }
  }
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Name: test/YataganMySearchAppComponent.java
package test;

import com.yandex.yatagan.AutoBuilder;
import com.yandex.yatagan.Lazy;
import com.yandex.yatagan.Optional;
import com.yandex.yatagan.internal.Checks;
import com.yandex.yatagan.internal.YataganGenerated;
import java.lang.AssertionError;
import java.lang.Class;
import java.lang.Object;
import java.lang.Override;
import java.lang.SuppressWarnings;
import java.util.Collections;
import javax.annotation.processing.Generated;
import javax.inject.Provider;

@SuppressWarnings({"unchecked", "rawtypes", "NullableProblems"})
@YataganGenerated
@Generated("com.yandex.yatagan.codegen.impl.ComponentGenerator")
public final class YataganMySearchAppComponent implements MySearchAppComponent {
  private YataganMySearchAppComponent() {
  }

  @Override
  public MyApiComponent.Factory getApiC() {
    return new MyApiComponentImpl.ComponentFactoryImpl(this);
  }

  Object switch$$access(int slot) {
    switch(slot) {
      case 0: return this.accessApi();
      default: throw new AssertionError();
    }
  }

  Api accessApi() {
    return new ImplB();
  }

  Optional optOfApi() {
    return Optional.of(this.accessApi());
  }

  Optional optOfTestApi() {
    return Optional.of(new ProviderImpl(this, 0));
  }

  public static AutoBuilder<YataganMySearchAppComponent> autoBuilder() {
    return new AutoBuilderImpl();
  }

  static final class MyApiComponentImpl implements MyApiComponent {
    final YataganMySearchAppComponent mMySearchAppComponent;

    MyApiComponentImpl(YataganMySearchAppComponent pMySearchAppComponent) {
      this.mMySearchAppComponent = pMySearchAppComponent;
    }

    @Override
    public Optional<Api> getApi() {
      return this.mMySearchAppComponent.optOfApi();
    }

    @Override
    public Optional<Provider<Api>> getApiProvider() {
      return this.mMySearchAppComponent.optOfTestApi();
    }

    private static final class ComponentFactoryImpl implements MyApiComponent.Factory {
      YataganMySearchAppComponent fMySearchAppComponent;

      ComponentFactoryImpl(YataganMySearchAppComponent fMySearchAppComponent) {
        this.fMySearchAppComponent = fMySearchAppComponent;
      }

      @Override
      public MyApiComponent create() {
        return new MyApiComponentImpl(this.fMySearchAppComponent);
      }
    }
  }

  static final class ProviderImpl implements Lazy {
    private final YataganMySearchAppComponent mDelegate;

    private final int mIndex;

    ProviderImpl(YataganMySearchAppComponent delegate, int index) {
      this.mDelegate = delegate;
      this.mIndex = index;
    }

    @Override
    public Object get() {
      return this.mDelegate.switch$$access(this.mIndex);
    }
  }

  private static final class AutoBuilderImpl implements AutoBuilder<YataganMySearchAppComponent> {
    @Override
    public final <I> AutoBuilder<YataganMySearchAppComponent> provideInput(I input,
        Class<I> inputClass) {
      Checks.reportUnexpectedAutoBuilderInput(input.getClass(), Collections.emptyList());
      return this;
    }

    @Override
    public final YataganMySearchAppComponent create() {
      return new YataganMySearchAppComponent();
    }
  }
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Name: test/YataganMyBrowserComponent.java
package test;

import com.yandex.yatagan.AutoBuilder;
import com.yandex.yatagan.Lazy;
import com.yandex.yatagan.Optional;
import com.yandex.yatagan.internal.Checks;
import com.yandex.yatagan.internal.YataganGenerated;
import java.lang.AssertionError;
import java.lang.Class;
import java.lang.Object;
import java.lang.Override;
import java.lang.SuppressWarnings;
import java.util.Collections;
import javax.annotation.processing.Generated;
import javax.inject.Provider;

@SuppressWarnings({"unchecked", "rawtypes", "NullableProblems"})
@YataganGenerated
@Generated("com.yandex.yatagan.codegen.impl.ComponentGenerator")
public final class YataganMyBrowserComponent implements MyBrowserComponent {
  private YataganMyBrowserComponent() {
  }

  @Override
  public MyApiComponent.Factory getApiC() {
    return new MyApiComponentImpl.ComponentFactoryImpl(this);
  }

  Object switch$$access(int slot) {
    switch(slot) {
      case 0: return this.accessApi();
      default: throw new AssertionError();
    }
  }

  Api accessApi() {
    return new ImplA();
  }

  Optional optOfApi() {
    return Optional.of(this.accessApi());
  }

  Optional optOfTestApi() {
    return Optional.of(new ProviderImpl(this, 0));
  }

  public static AutoBuilder<YataganMyBrowserComponent> autoBuilder() {
    return new AutoBuilderImpl();
  }

  static final class MyApiComponentImpl implements MyApiComponent {
    final YataganMyBrowserComponent mMyBrowserComponent;

    MyApiComponentImpl(YataganMyBrowserComponent pMyBrowserComponent) {
      this.mMyBrowserComponent = pMyBrowserComponent;
    }

    @Override
    public Optional<Api> getApi() {
      return this.mMyBrowserComponent.optOfApi();
    }

    @Override
    public Optional<Provider<Api>> getApiProvider() {
      return this.mMyBrowserComponent.optOfTestApi();
    }

    private static final class ComponentFactoryImpl implements MyApiComponent.Factory {
      YataganMyBrowserComponent fMyBrowserComponent;

      ComponentFactoryImpl(YataganMyBrowserComponent fMyBrowserComponent) {
        this.fMyBrowserComponent = fMyBrowserComponent;
      }

      @Override
      public MyApiComponent create() {
        return new MyApiComponentImpl(this.fMyBrowserComponent);
      }
    }
  }

  static final class ProviderImpl implements Lazy {
    private final YataganMyBrowserComponent mDelegate;

    private final int mIndex;

    ProviderImpl(YataganMyBrowserComponent delegate, int index) {
      this.mDelegate = delegate;
      this.mIndex = index;
    }

    @Override
    public Object get() {
      return this.mDelegate.switch$$access(this.mIndex);
    }
  }

  private static final class AutoBuilderImpl implements AutoBuilder<YataganMyBrowserComponent> {
    @Override
    public final <I> AutoBuilder<YataganMyBrowserComponent> provideInput(I input,
        Class<I> inputClass) {
      Checks.reportUnexpectedAutoBuilderInput(input.getClass(), Collections.emptyList());
      return this;
    }

    @Override
    public final YataganMyBrowserComponent create() {
      return new YataganMyBrowserComponent();
    }
  }
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
