error: Child components can't have a factory methods declared for them in their parents, if they have an explicit @Component.Builder declared.
NOTE: Factory method declared here: component-factory-method test.RootComponent::getSub1(): test.SubComponent1
Encountered:
  in graph for root-component test.RootComponent
  here: graph for component test.SubComponent1
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Child components can't have a factory methods declared for them in their parents, if they have an explicit @Component.Builder declared.
NOTE: Factory method declared here: component-factory-method test.RootComponent::getSub2(): test.SubComponent2
Encountered:
  in graph for root-component test.RootComponent
  here: graph for component test.SubComponent2
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Missing binding for test.SubComponent2
NOTE: A dependency seems to be a child component, try injecting its factory instead.
Encountered:
  in graph for root-component test.RootComponent
  in entry-point getA: test.ClassA
                       ^-[*1]-----
  in [1*] inject-constructor test.ClassA(test.SubComponent2)
                                         ^-[*2]------------
  here: [2*] <missing>
             ^~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: `graph for component test.FeatureComponent` with a condition:
    (1) [test.Features.isEnabled]
cannot be created via component factory method `component-factory-method test.RootComponent::getFsub(): test.FeatureComponent` of component under condition:`
    (2) [always-present]
because component condition (2) does not imply condition (1)
Encountered:
  in graph for root-component test.RootComponent
  here: component-factory-method test.RootComponent::getFsub(): test.FeatureComponent
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~