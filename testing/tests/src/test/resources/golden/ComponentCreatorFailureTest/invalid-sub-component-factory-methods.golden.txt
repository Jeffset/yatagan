error: Child components can't have a factory methods declared for them in their parents, if they have an explicit @Component.Builder declared.
NOTE: Factory method declared here: component-factory-method test.RootComponent1::sub1FactoryMethod(dep: test.MyDependencies): test.SubComponent1
Encountered:
  in graph for root-component test.RootComponent1
  here: graph for component test.SubComponent1
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Component hierarchy loop detected
Encountered:
  in graph for root-component test.RootComponent1
  in graph for component test.SubComponent3
  here: component-factory-method test.SubComponent3::createSubComponent3(i: int): test.SubComponent3
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Declared `component-dependency test.MyDependencies` is not passed to component creator
Encountered:
  in graph for root-component test.RootComponent1
  here: component-factory-method test.RootComponent1::sub2FactoryMethod1(foo: java.lang.Object): test.SubComponent2
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Missing binding for test.RootComponent2
NOTE: A dependency seems to be a component, though it does not belong to the current hierarchy.
Encountered:
  in graph for root-component test.RootComponent1
  in entry-point unknown: test.RootComponent2
                          ^-[*1]-------------
  here: [1*] <missing>
             ^~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Multiple factory methods detected for a `component test.SubComponent2`
NOTE: Duplicate declared as `component-factory-method test.RootComponent1::sub2FactoryMethod1(foo: java.lang.Object): test.SubComponent2`
NOTE: Duplicate declared as `component-factory-method test.RootComponent1::sub2FactoryMethod2(dep: test.MyDependencies): test.SubComponent2`
Encountered:
  here: graph for root-component test.RootComponent1
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Unrecognized type (component dependency?) is present
NOTE: To bind the instance itself, use @BindInstance marker
NOTE: To use the instance as component dependency, explicitly declare it in @Component(.., dependencies = [<here>], ..)
Encountered:
  in graph for root-component test.RootComponent1
  in component-factory-method test.RootComponent1::sub2FactoryMethod1(foo: java.lang.Object): test.SubComponent2
  in creator-method-parameter sub2FactoryMethod1(.., foo: java.lang.Object, ..)
                                                     ^-[*1]---------------
  here: [1*] input component-dependency java.lang.Object
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: `graph for component test.SubUnderFeature` with a condition:
    (1) [test.ConditionProvider.isEnabled]
cannot be created via component factory method `component-factory-method test.RootComponent1::subUnderFeature(dep: test.MyDependencies): test.SubUnderFeature` of component under condition:`
    (2) [always-present]
because component condition (2) does not imply condition (1)
Encountered:
  in graph for root-component test.RootComponent1
  here: component-factory-method test.RootComponent1::subUnderFeature(dep: test.MyDependencies): test.SubUnderFeature
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~