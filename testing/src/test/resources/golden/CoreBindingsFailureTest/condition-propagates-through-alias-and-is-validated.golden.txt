error: Feature declaration has no `@Condition`-family annotations on it.
Encountered:
  in graph for root-component test.TestComponent
  in entry-point getAny: java.util.List<java.lang.Object>
                         ^-[*1]--------------------------
  in [1*] list-binding List  { multi-binding-contributor java.lang.Object, 1 element } assembled in graph for root-component test.TestComponent
                               ^-[*2]------------------------------------
  in [2*] provision test.TestModule::toAny2(test.ApiBase)
                                            ^-[*3]------
  in [3*] alias test.TestModule::impl2(test.Api)
                                       ^-[*4]--
  in [4*] alias test.TestModule::impl1(test.Impl)
                                       ^-[*5]---
  in [5*] inject-constructor test.Impl()
  in its conditions declaration { runtime-conditions: [.., test.NotAFeature, ..] }
                                                           ^-[*6]----------
  here: [6*] feature test.NotAFeature <no-conditions-declared>
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Invalid dependency of `multi-binding-contributor java.lang.Object` on `test.Impl`:
`inject-constructor test.Impl()` with a condition:
    (1) [test.Foo.INSTANCE.isEnabledA]
cannot be injected into `provision test.TestModule::toAny1(.. 1 dependency)` with a condition:
    (2) [always-present]
without Optional<..> wrapper, because condition (2) does not imply condition (1)
NOTE: Condition passed through the `alias test.TestModule::impl1(test.Impl): test.Api`
Encountered:
  in graph for root-component test.TestComponent
  in entry-point getAny: java.util.List<java.lang.Object>
                         ^-[*1]--------------------------
  in [1*] list-binding List  { multi-binding-contributor java.lang.Object, 1 element } assembled in graph for root-component test.TestComponent
                               ^-[*2]------------------------------------
  here: [2*] provision test.TestModule::toAny1(.. 1 dependency)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Invalid dependency of `multi-binding-contributor java.lang.Object` on `test.Impl`:
`inject-constructor test.Impl()` with a condition:
    (1) [test.Foo.INSTANCE.isEnabledA]
cannot be injected into `provision test.TestModule::toAny2(.. 1 dependency)` with a condition:
    (2) [always-present]
without Optional<..> wrapper, because condition (2) does not imply condition (1)
NOTE: Condition passed through the alias chain: [
  `alias test.TestModule::impl2(test.Api): test.ApiBase`,
  `alias test.TestModule::impl1(test.Impl): test.Api`,
]
Encountered:
  in graph for root-component test.TestComponent
  in entry-point getAny: java.util.List<java.lang.Object>
                         ^-[*1]--------------------------
  in [1*] list-binding List  { multi-binding-contributor java.lang.Object, 1 element } assembled in graph for root-component test.TestComponent
                               ^-[*2]------------------------------------
  here: [2*] provision test.TestModule::toAny2(.. 1 dependency)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~