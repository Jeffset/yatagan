error: Can not find accessible `hello` member in test.Foo
Encountered:
  in graph for root-component test.MyComponent
  in entry-point getA: [Optional] test.ClassA
                       ^-[*1]----------------
  in [1*] inject-constructor test.ClassA()
  in its conditions declaration { runtime-conditions: [.., test.Invalid1, ..] }
                                                           ^-[*2]-------
  in [2*] feature test.Invalid1 [!test.Foo.hello]
                                 ^-[*3]---------
  here: [3*] !test.Foo.hello
             ^~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Invalid condition expression '#invalid'
Encountered:
  in graph for root-component test.MyComponent
  in entry-point getA: [Optional] test.ClassA
                       ^-[*1]----------------
  in [1*] inject-constructor test.ClassA()
  in its conditions declaration { runtime-conditions: [.., test.Invalid2, ..] }
                                                           ^-[*2]-------
  in [2*] feature test.Invalid2 [<invalid-condition>]
                                 ^-[*3]-------------
  here: [3*] <invalid-condition>
             ^~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Member `getFoo` in test.Foo is not static
Encountered:
  in graph for root-component test.MyComponent
  in entry-point getA: [Optional] test.ClassA
                       ^-[*1]----------------
  in [1*] inject-constructor test.ClassA()
  in its conditions declaration { runtime-conditions: [.., test.Invalid4, ..] }
                                                           ^-[*2]-------
  in [2*] feature test.Invalid4 [test.Foo.getFoo]
                                 ^-[*3]---------
  here: [3*] test.Foo.getFoo
             ^~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: Unable to reach boolean result in the given expression
Encountered:
  in graph for root-component test.MyComponent
  in entry-point getA: [Optional] test.ClassA
                       ^-[*1]----------------
  in [1*] inject-constructor test.ClassA()
  in its conditions declaration { runtime-conditions: [.., test.Invalid3, ..] }
                                                           ^-[*2]-------
  in [2*] feature test.Invalid3 [test.Foo.INSTANCE.getFoo]
                                 ^-[*3]------------------
  here: [3*] test.Foo.INSTANCE.getFoo
             ^~~~~~~~~~~~~~~~~~~~~~~~