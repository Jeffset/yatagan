package com.yandex.yatagan.gradle

import org.gradle.api.DefaultTask
import org.gradle.api.file.Directory
import org.gradle.api.file.DirectoryProperty
import org.gradle.api.file.FileCollection
import org.gradle.api.file.RegularFile
import org.gradle.api.model.ObjectFactory
import org.gradle.api.provider.Property
import org.gradle.api.provider.Provider
import org.gradle.api.tasks.Input
import org.gradle.api.tasks.InputFiles
import org.gradle.api.tasks.OutputDirectory
import org.gradle.api.tasks.OutputFile
import org.gradle.api.tasks.TaskAction
import org.gradle.kotlin.dsl.getValue
import org.gradle.kotlin.dsl.property
import org.gradle.kotlin.dsl.setValue
import javax.inject.Inject

/**
 * Generates Kotlin source, that contains declarations of a top-level const property with the given name and
 * given classpath value.
 *
 * Classpath is a list of files joined with ':' into a single string.
 */
abstract class ClasspathSourceGeneratorTask @Inject constructor(
    objects: ObjectFactory,
) : DefaultTask() {
    @get:Input
    val packageName: Property<String> = objects.property()

    @get:Input
    val propertyName: Property<String> = objects.property()

    @get:InputFiles
    val classpath: Property<FileCollection> = objects.property()

    @get:OutputDirectory
    val generatedSourceDir: DirectoryProperty = objects.directoryProperty().apply {
        convention(project.layout.buildDirectory.dir("generated-sources"))
    }

    @get:Input
    val generatedSourceName: Property<String> = objects.property<String>().apply {
        convention("$name.kt")
    }

    val generatedSource: Provider<RegularFile>
        @OutputFile get() = generatedSourceDir.file(generatedSourceName)

    @TaskAction
    fun action() {
        generatedSource.get().asFile.writeText("""
            // This source is GENERATED by gradle task `$name`. Do not edit!
            
            package ${packageName.get()}
            
            const val ${propertyName.get()} = "${classpath.get().joinToString(separator = ":\" +\n\"")}"
        """.trimIndent()
        )
    }
}